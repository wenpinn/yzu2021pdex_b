#include <iostream>
#include <string>
using namespace std;
/**
  *@author Kevin 林俊廷
  */
/**
  * declare  
class CCAR {
  private:
    string nickname;
  protected:
    int light;
    int wheel;
  public:
    /**
      * declare a constructor CCAR with no input number
      * give light 2
      * give wheel 5
      * print wheel's number
      */    
    CCAR() :light(2){
      wheel = 5;
      cout << "car's constructor(wheel=" << wheel << ")" << endl;
    }
    /**
      * declare a constructor CCAR with a input string nickname
      * give light 2
      * give wheel 5
      * save input nikname to private nickname
      */
    CCAR(string nickname) :light(2){
      wheel = 5;
      this->nickname = nickname;
      cout << "car's constructor(nickname=" << nickname << ")" << endl;
    }
    /**
      * declare a destructor to free the memory of the constructor CCAR
      * print nickname which is private member
      */
    ~CCAR(){
      cout << "car's destructor" << "(" << nickname << ")" << endl;
    }
    /**
      * declare a function to print "car's start"
      */
    void start(){
      cout << "car's start" << endl;
    }
    /**
      * declare a function to print "car's stop"
      */
    void stop(){
      cout << "car's stop" << endl;
    }
    /**
      * declare a function to print "car's turn"
      */
    void turn(){
      cout << "car's turn" << endl;
    }
};
/**
  * declare a class CBMW to inherit the class CCAR
  */
class CBMW : public CCAR {
  public:
    CBMW() { light = 4; wheel = 4; cout << "bmw's constructor" << endl; }
    ~CBMW() { cout << "bmw's destructor" << endl; }
    void Abs(){
      cout << "bmw's abs" << endl;
    }
    /**
      * declare a function start to print "bmw's start"
      * inherit function start from class CCAR
      */
    void start(){
      cout << "bmw's start" << endl;
      CCAR::start(); 
    }
};
/**
  * declare a type CBMW object bmw
  * execute object's inherit function start to indicate bmw's start and the start of the program
  * execute object's function abs to print bmw's abs
  * execute object's inherit function stop to indicate car's stop
  */
int main(int argc, const char * argv[]) {
  CBMW bmw;
  bmw.start();
  bmw.Abs();
  bmw.stop();

  return 0;
}
