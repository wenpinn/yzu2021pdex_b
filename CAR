/**
@file iostream string
*@author 1092006張皓鈞
  *version1.0
  */
#include <iostream>
#include <string>
using namespace std;
/**
  *A class for creating car and moving it.
  */
class CCAR
{
private:
string nickname; 
protected:
int light; 
int wheel; 
public:
/**
*@showing how many wheels. input light(2),wheel=5
*/
CCAR() :light(2)
{
wheel = 5;
cout << "car's constructor(wheel=" << wheel << ")" << endl;
}
/**
*@display nickname
*/
CCAR(string nickname) :light(2) 
{
wheel = 5;
/**
*@indicate the specifically nickname.
*/
this->nickname = nickname; 
cout << "car's constructor(nickname=" << nickname << ")" << endl;
}
/**
*@ ~ is when input delete will delete this function's parameter.
*@delete this's function nickname.
*/
~CCAR()
{
cout << "car's destructor" << "(" << nickname << ")" << endl;
}
/**
*@brief for the function of car controlling.
*/
void start()
{
cout << "car's start" << endl;
}
void stop()
{
cout << "car's stop" << endl;
}
void turn()
{
cout << "car's turn" << endl;
}
};
//--------------------------
/**
*@inherited the parameter to CCAR.
*@change the parrmeter in this function.
*/
class CBMW : public CCAR
{
public:
CBMW() { light = 4; wheel = 4; cout << "bmw's constructor" << endl; }
~CBMW() { cout << "bmw's destructor" << endl; }
/**
*@ is a cout function.
*/
void Abs()
{
cout << "bmw's abs" << endl;
}
void start()
{
cout << "bmw's start" << endl;
/**
*@ is a scope operator about start.
*/
CCAR::start();//scope operator
//CCAR c;
//c.start();
}
};
//--------------------------
int main(int argc, const char * argv[]) {
CBMW bmw;
// bmw.light=3;
/**
*@initiating this function.
*/
bmw.start();
bmw.Abs();
bmw.stop();

return 0;
}
